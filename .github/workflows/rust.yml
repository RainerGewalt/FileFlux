name: Rust and Docker Build

on:
  push:
    branches: 
      - "main"
      - "dev"
  pull_request:
    branches: 
      - "main"
      - "dev"

env:
  CARGO_TERM_COLOR: always

jobs:
  rust-build:
    name: Rust Build and Test
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Build Rust project
      - name: Build
        run: cargo build --release --verbose

      # Run tests
      - name: Run tests
        run: cargo test --verbose

  docker-build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: rust-build
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Define image tag based on branch
      - name: Set Docker Image Tag
        id: vars
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "tag=latest" >> $GITHUB_ENV
          else
            echo "tag=dev" >> $GITHUB_ENV
          fi

      # Build and push the Docker image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_REPO }}:${{ env.tag }}
            ${{ secrets.DOCKER_REPO }}:${{ github.sha }}

      # Post Build Info
      - name: Show Docker Image Info
        run: |
          echo "Built and pushed image:"
          echo "Tag: ${{ env.tag }}"
          echo "Commit SHA: ${{ github.sha }}"
